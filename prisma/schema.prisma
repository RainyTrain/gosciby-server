generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id  Int @id @default(autoincrement())
  email String @unique
  password String 
  refreshToken String?
  role  Role[] @default([USER])
  profile Profile?
}

model Profile {
  id Int  @id @default(autoincrement())
  name String
  surname String
  birth String
  registered DateTime  @default(now()) @db.Date
  currency Currency
  adress String
  country String
  avatar String?
  user  User  @relation(fields: [userId], references: [id])
  userId Int @unique
  bookings Booking[]
  feedback Feedback[]
  posts Accomodation[]
}

model Accomodation {
  id Int @id @default(autoincrement())
  accomodationType AccomodationType
  name String
  description String
  totalRooms Int
  availableRooms Int
  wifi Boolean
  pets Boolean
  coordinates String?
  photos String[]
  price Float
  bookings Booking[]
  owner Profile @relation(fields: [ownerId], references: [id])
  ownerId Int
}

model Booking {
   id Int @id @default(autoincrement())
   profile Profile @relation(fields: [profileId], references: [id])
   profileId Int
   accomodation Accomodation @relation(fields: [accomodationId], references: [id])
   accomodationId Int
   checkInDate DateTime
   checkOutDate DateTime
   totalPrice Float
   isConfirmed Boolean
   status Status
   bookingDate DateTime @default(now())
   feedback Feedback[]
   rating Float?
}

model Feedback {
  id Int @unique @default(autoincrement())
  profile Profile @relation(fields: [profileId],references: [id])
  profileId Int
  booking Booking @relation(fields: [bookingId],references: [id])
  bookingId Int
  content String
  commentDate DateTime @default(now())
  stars Int
}


enum Currency {
  USD
  EUR
  PLN
  RUB
}

enum Role {
  ADMIN
  USER
}

enum AccomodationType {
  HOTEL
  APARTMENT
  HOSTEL
  HOUSE
  VILLA
}

enum Status {
  ACTIVE
  INACTIVE
}
